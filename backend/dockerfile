# ---------- BUILDER ----------
FROM node:20-alpine AS builder
WORKDIR /app

# Yarn ya viene, no lo reinstalamos
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Compilar a dist/
COPY tsconfig*.json ./
COPY src ./src
RUN yarn build

# ---------- RUNNER ----------
FROM node:20-alpine AS runner
WORKDIR /app

# Cliente pg para esperar la DB
RUN apk add --no-cache postgresql-client

# Instalar solo prod deps
COPY package.json yarn.lock ./
ENV NODE_ENV=production
RUN yarn install --frozen-lockfile --production=true

# Copiar compilado y ormconfig
COPY --from=builder /app/dist ./dist
COPY ormconfig.js ./ormconfig.js

EXPOSE 5000

# Esperar DB, correr migraciones (TypeORM 0.2.x) y arrancar API
CMD sh -c '\
    echo "‚è≥ Esperando base de datos..." && \
    until pg_isready -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USERNAME"; do sleep 2; done; \
    echo "‚úÖ DB lista, ejecutando migraciones..." && \
    node ./node_modules/typeorm/cli.js migration:run && \
    echo "üöÄ Iniciando API..." && \
    node dist/main.js \
    '
